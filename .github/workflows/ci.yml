name: CI & Docker Publish

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'        # публикация образа при пуше тега вида v1.2.3
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.24'
  DOCKERHUB_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/parcel-tracker

jobs:
  test:
    name: Lint & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Go fmt check
        run: |
          fmt_out=$(gofmt -l .)
          if [ -n "$fmt_out" ]; then
            echo "The following files are not gofmt-ed:"
            echo "$fmt_out"
            exit 1
          fi

      - name: Go vet
        run: go vet ./...

      # Тестам нужна таблица parcel в локальной tracker.db.
      # Создадим её перед запуском тестов.
      - name: Install sqlite3 CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y sqlite3

      - name: Prepare test DB schema
        run: |
          sqlite3 tracker.db <<'SQL'
          CREATE TABLE IF NOT EXISTS parcel (
            number     INTEGER PRIMARY KEY AUTOINCREMENT,
            client     INTEGER NOT NULL,
            status     TEXT    NOT NULL,
            address    TEXT    NOT NULL,
            created_at TEXT    NOT NULL
          );
          SQL

      - name: Run tests
        run: go test ./... -v

  publish:
    name: Build & Push Docker
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_IMAGE }}
          tags: |
            type=raw,value=latest
            type=ref,event=tag
          labels: |
            org.opencontainers.image.title=parcel-tracker
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ github.ref_name }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # быстрые повторные сборки
          cache-from: type=gha
          cache-to: type=gha,mode=max
